# -*- coding: utf-8 -*-
"""numberrecognitiondeeplearning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V_Gx8PpCm4CpsZhTHIxeZXycLo7Moxf5
"""

import tensorflow as tf
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.models import Sequential
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.datasets import mnist
import numpy as np
import tkinter as tk
from PIL import Image, ImageDraw

print(mnist)

(xtrain, ytrain), (xtest, ytest)= mnist.load_data()
xtrain =xtrain/255.0
xtest =xtest/255.0
ytrain = to_categorical(ytrain, num_classes=10)
ytest = to_categorical(ytest, 10)

model = Sequential([
    Flatten(input_shape = (28, 28)),
    Dense(128, activation= 'relu'),
    Dense(64, activation = 'relu'),
    Dense(10, activation= 'softmax')]

)

model.compile(optimizer = "adam", loss = "categorical_crossentropy", metrics = ["accuracy"])
model.fit(xtrain, ytrain, epochs = 5, batch_size = 32, validation_data = (xtest, ytest))

preds = model.predict(xtest)
predictions = np.argmax(preds, axis = 1)
trueclasses = np.argmax(ytest, axis = 1)
for i in range(5):
  print(f"Predicted : {predictions[i]}, True : {trueclasses[i]}" )

